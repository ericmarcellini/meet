[{"C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\index.js":"1","C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\reportWebVitals.js":"2","C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\App.js":"3","C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\index.js":"5","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\App.js":"6","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js":"7","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\reportWebVitals.js":"8","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\EventList.js":"9","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\CitySearch.js":"10","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\NumberOfEvents.js":"11","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\Event.js":"12","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\mock-data.js":"13","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\api.js":"14"},{"size":818,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":364,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":555,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":5064,"mtime":499162500000,"results":"19","hashOfConfig":"16"},{"size":841,"mtime":1633015638596,"results":"20","hashOfConfig":"21"},{"size":1198,"mtime":1634115336494,"results":"22","hashOfConfig":"21"},{"size":5201,"mtime":1633015638597,"results":"23","hashOfConfig":"21"},{"size":377,"mtime":1633015638596,"results":"24","hashOfConfig":"21"},{"size":438,"mtime":1633015638592,"results":"25","hashOfConfig":"21"},{"size":1688,"mtime":1634113181647,"results":"26","hashOfConfig":"21"},{"size":521,"mtime":1633851514781,"results":"27","hashOfConfig":"21"},{"size":1217,"mtime":1633251855332,"results":"28","hashOfConfig":"21"},{"size":545460,"mtime":1633033840423,"results":"29","hashOfConfig":"21"},{"size":3105,"mtime":1634117793987,"results":"30","hashOfConfig":"21"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iixs1s",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ypf5fa",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\index.js",[],"C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\reportWebVitals.js",[],"C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\App.js",[],"C:\\Users\\renga\\desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\index.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\App.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\reportWebVitals.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\EventList.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\CitySearch.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\NumberOfEvents.js",["62"],"import React, { Component } from \"react\";\r\nimport { mockData } from \"./mock-data\";\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        events: 32,\r\n      }\r\n\r\n    render(){\r\n        let events = this.state.events;\r\n        return(\r\n            <div className=\"NumberOfEvents\">\r\n                <input\r\n                type=\"text\"\r\n                className=\"numberEvents\"\r\n                value={events}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\Event.js",["63"],"import React, { Component } from \"react\";\r\nimport { mockData } from \"./mock-data\";\r\n\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        show: false,\r\n      };\r\n    \r\n      handleButton = () => {\r\n        this.setState((prevState) => ({ show: !prevState.show }));\r\n      };\r\n\r\n\r\n      render() {\r\n        let event = this.props.event;\r\n    \r\n        return (\r\n            <ul className=\"Event\">\r\n              <li className=\"Summary\">{event.summary}</li>\r\n              <li className=\"Location\">{event.location}</li>\r\n              <li className=\"Date\">start: {event.start.dateTime}</li>\r\n              {this.state.show === true && (\r\n                <p className=\"Details\">{event.description}</p>\r\n              )}\r\n              {this.state.show === false && (\r\n                <button className=\"showDetails\" onClick={() => this.handleButton()}>\r\n                  Show more details\r\n                </button>\r\n              )}\r\n              {this.state.show === true && (\r\n                <button className=\"hideDetails\" onClick={() => this.handleButton()}>\r\n                  hide details\r\n                </button>\r\n              )}\r\n            </ul>\r\n        )\r\n      }\r\n    }\r\n\r\nexport default Event;","C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\mock-data.js",[],"C:\\Users\\renga\\Desktop\\careerfoundry\\meet\\src\\api.js",["64","65","66","67","68"],"import { mockData } from \"./mock-data\";\r\nimport axios from 'axios';\r\nimport NProgress from \"nprogress\";\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n export const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n  };\r\n\r\n  const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json())\r\n\r\n    return result;\r\n  }\r\n\r\n  const getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n      'https://0g3iisus56.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n  };\r\n\r\n  const removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname){\r\n      var newurl =\r\n        window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        window.location.pathname;\r\n      window.history.pushState(\"\", \"\", newurl);  \r\n    }\r\n  };\r\n\r\n\r\n export const getEvents = async () => {\r\n   NProgress.start();\r\n\r\n   if (window.location.href.startsWith('http://localhost')){\r\n     return mockData;\r\n   };\r\n\r\n   const token = await getAccessToken();\r\n   if (token){\r\n     removeQuery();\r\n     const url = 'https://0g3iisus56.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n     const result = await axios.get(url);\r\n     if (result.data){\r\n       var locations = extractLocations(result.data.events);\r\n       localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n       localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n     }\r\n     NProgress.done();\r\n     return result.data.events;\r\n   }\r\n };\r\n\r\n export const getAccessToken = async () => {\r\n  const getAccessToken = localStorage.getItem('access_token');  \r\n  const tokenCheck = getAccessToken && (await checkToken(accessToken));\r\n    if(!accessToken || tokenCheck.error){\r\n      await localStorage.removeItem(\"access_token\");\r\n      const searchParams = new URLSearchParams(window.location.search);\r\n      const code = await searchParams.get(\"code\");\r\n      if (!code){\r\n        const results = await axios.get(\"https://0g3iisus56.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\");\r\n        const { authUrl } = results.data;\r\n        return (window.location.href = authUrl);\r\n      }\r\n      return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n }",{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":31,"column":81,"nodeType":"75","messageId":"76","endLine":31,"endColumn":82},{"ruleId":"73","severity":1,"message":"74","line":65,"column":97,"nodeType":"75","messageId":"76","endLine":65,"endColumn":98},{"ruleId":"77","severity":2,"message":"78","line":79,"column":58,"nodeType":"71","messageId":"79","endLine":79,"endColumn":69},{"ruleId":"77","severity":2,"message":"78","line":80,"column":9,"nodeType":"71","messageId":"79","endLine":80,"endColumn":20},{"ruleId":"77","severity":2,"message":"78","line":91,"column":12,"nodeType":"71","messageId":"79","endLine":91,"endColumn":23},"no-unused-vars","'mockData' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-undef","'accessToken' is not defined.","undef"]